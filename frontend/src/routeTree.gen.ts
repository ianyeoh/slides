/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProtectedImport } from './routes/_protected'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as ProtectedDashboardImport } from './routes/_protected/dashboard'
import { Route as AuthRegisterImport } from './routes/_auth/register'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as ProtectedDashboardIndexImport } from './routes/_protected/dashboard/index'
import { Route as ProtectedDashboardPresentationPIndexImport } from './routes/_protected/dashboard/presentation.$pIndex_'
import { Route as ProtectedDashboardPresentationPIndexSlideSIndexImport } from './routes/_protected/dashboard/presentation.$pIndex.slide.$sIndex'
import { Route as ProtectedDashboardPresentationPIndexSlideSIndexPresentImport } from './routes/_protected/dashboard/presentation_.$pIndex.slide.$sIndex.present'

// Create/Update Routes

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedDashboardRoute = ProtectedDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => ProtectedRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const ProtectedDashboardIndexRoute = ProtectedDashboardIndexImport.update({
  path: '/',
  getParentRoute: () => ProtectedDashboardRoute,
} as any)

const ProtectedDashboardPresentationPIndexRoute =
  ProtectedDashboardPresentationPIndexImport.update({
    path: '/presentation/$pIndex',
    getParentRoute: () => ProtectedDashboardRoute,
  } as any)

const ProtectedDashboardPresentationPIndexSlideSIndexRoute =
  ProtectedDashboardPresentationPIndexSlideSIndexImport.update({
    path: '/presentation/$pIndex/slide/$sIndex',
    getParentRoute: () => ProtectedDashboardRoute,
  } as any)

const ProtectedDashboardPresentationPIndexSlideSIndexPresentRoute =
  ProtectedDashboardPresentationPIndexSlideSIndexPresentImport.update({
    path: '/presentation/$pIndex/slide/$sIndex/present',
    getParentRoute: () => ProtectedDashboardRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_auth/register': {
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof AuthImport
    }
    '/_protected/dashboard': {
      preLoaderRoute: typeof ProtectedDashboardImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/dashboard/': {
      preLoaderRoute: typeof ProtectedDashboardIndexImport
      parentRoute: typeof ProtectedDashboardImport
    }
    '/_protected/dashboard/presentation/$pIndex': {
      preLoaderRoute: typeof ProtectedDashboardPresentationPIndexImport
      parentRoute: typeof ProtectedDashboardImport
    }
    '/_protected/dashboard/presentation/$pIndex/slide/$sIndex': {
      preLoaderRoute: typeof ProtectedDashboardPresentationPIndexSlideSIndexImport
      parentRoute: typeof ProtectedDashboardImport
    }
    '/_protected/dashboard/presentation/$pIndex/slide/$sIndex/present': {
      preLoaderRoute: typeof ProtectedDashboardPresentationPIndexSlideSIndexPresentImport
      parentRoute: typeof ProtectedDashboardImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AuthRoute.addChildren([AuthLoginRoute, AuthRegisterRoute]),
  ProtectedRoute.addChildren([
    ProtectedDashboardRoute.addChildren([
      ProtectedDashboardIndexRoute,
      ProtectedDashboardPresentationPIndexRoute,
      ProtectedDashboardPresentationPIndexSlideSIndexRoute,
      ProtectedDashboardPresentationPIndexSlideSIndexPresentRoute,
    ]),
  ]),
])

/* prettier-ignore-end */
